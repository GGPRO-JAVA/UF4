import{_ as s,c as t,o as i,a4 as r}from"./chunks/framework.D91yMMqr.js";const m=JSON.parse('{"title":"1. Introducció","description":"","frontmatter":{},"headers":[],"relativePath":"1-introduccio.md","filePath":"1-introduccio.md"}'),a={name:"1-introduccio.md"};function l(n,e,o,c,u,d){return i(),t("div",null,e[0]||(e[0]=[r('<h1 id="_1-introduccio" tabindex="-1">1. Introducció <a class="header-anchor" href="#_1-introduccio" aria-label="Permalink to &quot;1. Introducció&quot;">​</a></h1><p>Els bucles són estructures de repetició, blocs d&#39;instruccions que es repeteixen un nombre de vegades mentre es complisca una condició o fins que es complisca una condició. El bloc d&#39;instruccions es trobarà tancat mitjançant claus {........} si existeix més d&#39;una instrucció igual que succeeix en les estructures alternatives (if… else… etc). Existeixen tres construccions per a aquestes estructures de repetició:</p><ul><li>Bucle for</li><li>Bucle while</li><li>Bucle do-while</li></ul><p>Tot problema que requerisca repetició pot fer-se amb qualsevol dels tres, però segons el cas sol ser més senzill o intuïtiu utilitza l&#39;un o l&#39;altre.<br> Com a regla general és recomanable:</p><ul><li>Utilitzar el bucle <strong>for</strong> quan es conega per endavant el nombre exacte de vegades que ha de repetir-se el bloc d&#39;instruccions.</li><li>Utilitzar el bucle <strong>while</strong> quan no sabem el nombre de vegades que ha de repetir-se el bloc i és possible que no haja d&#39;executar-se cap vegada.</li><li>Utilitzar el bucle <strong>do-while</strong> quan no sabem el nombre de vegades que ha de repetir-se el bloc i deurà executar-se almenys una vegada.</li></ul><p>Aquestes regles són generals i alguns programadors se senten més còmodes utilitzant principalment una d&#39;elles. Amb major o menor esforç, pot utilitzar-se qualsevol de les tres indistintament.</p>',6)]))}const b=s(a,[["render",l]]);export{m as __pageData,b as default};
