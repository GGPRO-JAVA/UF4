import{_ as i,c as a,o as n,a4 as e}from"./chunks/framework.D91yMMqr.js";const t="/UF4/uf4/bucle_while.jpg",E=JSON.parse('{"title":"3. Bucle while","description":"","frontmatter":{},"headers":[],"relativePath":"3-while.md","filePath":"3-while.md"}'),l={name:"3-while.md"};function p(h,s,k,r,d,c){return n(),a("div",null,s[0]||(s[0]=[e('<h1 id="_3-bucle-while" tabindex="-1">3. Bucle while <a class="header-anchor" href="#_3-bucle-while" aria-label="Permalink to &quot;3. Bucle while&quot;">​</a></h1><p>El bucle while es codifica de la següent forma:</p><table tabindex="0"><thead><tr><th>Codi</th><th>Diagrama de flux</th></tr></thead><tbody><tr><td><strong>while (condició) { <br> bloc d&#39;accions; <br> }</strong></td><td><img src="'+t+`" alt="Bucle while"></td></tr></tbody></table><p>El bloc d&#39;instruccions s&#39;executa mentre es compleix una condició (mentre condició s&#39;avalue a true). <strong>La condició es comprova ABANS de començar</strong> a executar per primera vegada el bucle, per la qual cosa si s&#39;avalua a false en la primera iteració, llavors el bloc d&#39;accions no s&#39;executarà cap vegada. El mateix exemple 2 d’abans, fet amb un bucle while seria:</p><p>El mateix exemple 2 d’abans, fet amb un bucle while seria:</p><blockquote><p><strong>Exemple 3</strong>:</p><details class="details custom-block"><summary>Codi</summary><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] args){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Scanner sc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Scanner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System.in);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max, cont;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Introdueix el número màxim: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  max </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nextInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  cont </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cont </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Número: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cont);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      cont</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details><p>L&#39;eixida és:</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Introdueix el número màxim: 5</span></span>
<span class="line"><span>Número 1</span></span>
<span class="line"><span>Número 2</span></span>
<span class="line"><span>Número 3</span></span>
<span class="line"><span>Número 4</span></span>
<span class="line"><span>Número 5</span></span></code></pre></div></blockquote>`,6)]))}const g=i(l,[["render",p]]);export{E as __pageData,g as default};
