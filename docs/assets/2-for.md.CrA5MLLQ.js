import{_ as i,c as a,o as n,a4 as t}from"./chunks/framework.D91yMMqr.js";const e="/UF4/uf4/bucle_for.jpg",E=JSON.parse('{"title":"2. Bucle for","description":"","frontmatter":{},"headers":[],"relativePath":"2-for.md","filePath":"2-for.md"}'),l={name:"2-for.md"};function p(r,s,h,k,d,o){return n(),a("div",null,s[0]||(s[0]=[t('<h1 id="_2-bucle-for" tabindex="-1">2. Bucle for <a class="header-anchor" href="#_2-bucle-for" aria-label="Permalink to &quot;2. Bucle for&quot;">​</a></h1><p>El bucle for es codifica de la següent forma:</p><table tabindex="0"><thead><tr><th>Codi</th><th>Diagrama de flux</th></tr></thead><tbody><tr><td><strong>for (inicialització;condició;increment){ <br> bloc d&#39;accions; <br> }</strong></td><td><img src="'+e+`" alt="Bucle for"></td></tr></tbody></table><p>La clàusula <strong>inicialització</strong> és una instrucció que s&#39;executa una sola vegada a l&#39;inici del bucle, normalment per a inicialitzar un comptador. Per exemple <strong>int i = 1;</strong></p><p>La clàusula <strong>condició</strong> és una expressió lògica que s&#39;avalua a l&#39;inici de cada iteració del bucle. En el moment en què aquesta expressió s&#39;avalue a false es deixarà d&#39;executar el bucle i el control del programa passarà a la següent instrucció (a continuació del bucle for). S&#39;utilitza per a indicar la condició en la qual vols que el bucle continue. Per exemple <strong>i &lt;= 10;</strong></p><p>La clàusula <strong>increment</strong> és una instrucció que s&#39;executa al final de cada iteració del bucle (després del bloc d&#39;instruccions). Generalment s&#39;utilitza per a incrementar o decrementar el comptador. Per exemple i++; (incrementar i en 1).</p><blockquote><p><strong>Exemple 1</strong>: Bucle que mostra per pantalla els nombres naturals de l&#39;1 al 10:</p><details class="details custom-block"><summary>Codi</summary><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details><ul><li>En la inicialització utilitzem <strong>int i=1</strong> per a crear la variable i amb un valor inicial de 1.</li><li>La condició <strong>i&lt;=10</strong> indica que el bucle ha de repetir-se mentre i siga menor o igual a 10.</li><li>L&#39;actualització <strong>i++</strong> indica que, al final de cada iteració, i ha d&#39;incrementar-se en 1.</li></ul></blockquote><blockquote><p><strong>Exemple 2</strong>: Programa que mostra els nombres naturals (1,2,3,4,5,6,...) fins a un número introduït per teclat:</p><details class="details custom-block"><summary>Codi</summary><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] args){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Scanner sc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Scanner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System.in);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Introdueix el número màxim: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  max </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nextInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">max; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Número: &quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details><p>L&#39;eixida és:</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Introdueix el número màxim: 5</span></span>
<span class="line"><span>Número 1</span></span>
<span class="line"><span>Número 2</span></span>
<span class="line"><span>Número 3</span></span>
<span class="line"><span>Número 4</span></span>
<span class="line"><span>Número 5</span></span></code></pre></div></blockquote>`,8)]))}const g=i(l,[["render",p]]);export{E as __pageData,g as default};
