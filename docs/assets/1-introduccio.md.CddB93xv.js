import{_ as t,c as a,o,a4 as i}from"./chunks/framework.D91yMMqr.js";const m=JSON.parse('{"title":"1. Introducció","description":"","frontmatter":{},"headers":[],"relativePath":"1-introduccio.md","filePath":"1-introduccio.md"}'),r={name:"1-introduccio.md"};function l(s,e,n,c,u,d){return o(),a("div",null,e[0]||(e[0]=[i('<h1 id="_1-introduccio" tabindex="-1">1. Introducció <a class="header-anchor" href="#_1-introduccio" aria-label="Permalink to &quot;1. Introducció&quot;">​</a></h1><p>Els bucles són estructures de control que permeten repetir un conjunt d&#39;instruccions diverses vegades. Aquesta repetició es realitza mentre es compleix una determinada condició o fins que es compleix una condició específica, segons el tipus de bucle utilitzat. Si el bloc a repetir conté més d&#39;una instrucció, és habitual agrupar-les mitjançant un delimitador de bloc (com ara claus {} o altres símbols segons el llenguatge).</p><ul><li><code>Bucle for</code></li><li><code>Bucle while</code></li><li><code>Bucle do-while</code></li></ul><p>Tot problema que requerisca repetició pot fer-se amb qualsevol dels tres, però segons el cas sol ser més senzill o intuïtiu utilitza l&#39;un o l&#39;altre.<br> Com a regla general és recomanable:</p><ul><li>Utilitzar el bucle <strong><code>for</code></strong> quan es conega per endavant el nombre exacte de vegades que ha de repetir-se el bloc d&#39;instruccions.</li><li>Utilitzar el bucle <strong><code>while</code></strong> quan no sabem el nombre de vegades que ha de repetir-se el bloc i és possible que no haja d&#39;executar-se cap vegada.</li><li>Utilitzar el bucle <strong><code>do-while</code></strong> quan no sabem el nombre de vegades que ha de repetir-se el bloc i deurà executar-se almenys una vegada.</li></ul><p>Aquestes regles són generals i, normalment, s&#39;usarà un tipus o altre en funció de les necessitats. Però cal tindre en compte que, amb major o menor esforç, pot utilitzar-se qualsevol de les tres indistintament.</p>',6)]))}const b=t(r,[["render",l]]);export{m as __pageData,b as default};
